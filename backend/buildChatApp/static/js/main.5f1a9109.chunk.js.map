{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","components/Authentication/FaceLogin.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/miscellaneous/VideoChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/Translate.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","Pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setTimeout","setItem","stringify","window","location","reload","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","Signup","handleClick","name","setName","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","picLoading","setPicLoading","_useState15","_useState16","webcamOn","setWebcamOn","_useState17","_useState18","file1","setFile1","_useState19","_useState20","previewUrl","setPreviewUrl","webcamRef","useRef","formData","FormData","append","timeout","handleStartWebcam","_ref2","_callee2","stream","_context2","navigator","mediaDevices","getUserMedia","video","getVideoTracks","length","alert","console","log","imageUrl","URL","createObjectURL","_Fragment","Webcam","audio","mirrored","ref","screenshotFormat","imageSrc","current","getScreenshot","byteCharacters","atob","split","byteArrays","Uint8Array","i","charCodeAt","blob","Blob","mt","maxW","src","alt","borderRadius","files","FaceLogin","maxWidth","Homepage","socket","selectedChatCompare","Container","centerContent","Box","d","justifyContent","p","bg","w","m","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","variant","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","userId","sender","_id","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","pic","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mr","cursor","backgroundColor","concat","marginLeft","padding","className","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_yield$axios$put","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","VideoChatModal","callAccepted","setCallAccepted","callEnded","setCallEnded","receivingCall","setReceivingCall","showVideoOverlay","setShowVideoOverlay","myVideo","userVideo","connectionRef","idToCall","setIdToCall","me","setMe","setStream","caller","setCaller","callerSignal","setCallerSignal","findItemId","s","headId","findIndex","splice","result","option","on","from","signal","then","srcObject","leaveCall","destroy","PhoneIcon","playsInline","autoPlay","height","peer","Peer","initiator","trickle","emit","to","userToCall","signalData","callUser","ENDPOINT","process","REACT_ENDPOINT","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","setServerSocket","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","sendMessage","event","key","_toConsumableArray","io","socketId","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","Chatbox","ChatLoading","Stack","Skeleton","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","Translate","inputText","setInputText","detectLanguageKey","setdetectedLanguageKey","selectedLanguageKey","setLanguageKey","languagesList","setLanguagesList","resultText","setResultText","Textarea","Select","selectedLanguage","language","code","q","source","translatedText","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","NotFound","App","Switch","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.5f1a9109.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n      setTimeout(() => {\n        toast({\n          title: \"Login Successful\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }, 1000);\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      window.location.reload();\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      {/* <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button> */}\n    </VStack>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { Webcam } from \"react-webcam\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n  const [webcamOn, setWebcamOn] = useState(false);\n  const [file1, setFile1] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const webcamRef = useRef(null);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    formData.append(\"file1\", file1);\n\n    try {\n      const { data } = await axios.post(\"/api/user\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        timeout: 200000,\n      });\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const handleCapture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const byteCharacters = atob(imageSrc.split(',')[1]);\n    const byteArrays = new Uint8Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteArrays[i] = byteCharacters.charCodeAt(i);\n    }\n    const blob = new Blob([byteArrays], { type: 'image/jpeg' });\n\n    setFile1(blob);\n    setWebcamOn(false);\n  };\n\n  const handleStartWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n\n      if (stream && stream.getVideoTracks().length > 0) {\n        setWebcamOn(true);\n      } else {\n        alert('No webcam present.');\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Requested Device Not Found');\n    }\n  };\n\n  const handleStopWebcam = () => {\n    setWebcamOn(false);\n  };\n\n  useEffect(() => {\n    if (file1) {\n      const imageUrl = URL.createObjectURL(file1);\n      setPreviewUrl(imageUrl);\n      console.log(file1);\n    }\n  }, [file1]);\n\n  return (\n    <VStack spacing=\"5px\">\n\n      {webcamOn ? (\n        <>\n          <Webcam audio={false} mirrored={true} ref={webcamRef} screenshotFormat=\"image/jpeg\" />\n          <Button colorScheme=\"blue\" onClick={handleCapture} mt=\"4\">\n            Capture Image\n          </Button>\n          <Button colorScheme=\"blue\" onClick={handleStopWebcam} mt=\"4\">\n            Stop Webcam\n          </Button>\n        </>\n      ) : (\n        <Button colorScheme=\"blue\" onClick={handleStartWebcam} mt=\"4\">\n          Start Webcam\n        </Button>\n      )}\n\n      {file1 && (\n        <div maxW=\"100px\" >\n          <img src={previewUrl} alt=\"Preview\" style={{ borderRadius: '5%' }} />\n        </div>\n      )}\n\n\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Image</FormLabel>\n        <Input\n          type=\"file\"\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setFile1(e.target.files[0])}\n        />\n      </FormControl>\n\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      {/* <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl> */}\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport { Input, useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst FaceLogin = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n  const [webcamOn, setWebcamOn] = useState(false);\n  const [file1, setFile1] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const webcamRef = useRef(null);\n\n  const handleCapture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const byteCharacters = atob(imageSrc.split(\",\")[1]);\n    const byteArrays = new Uint8Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteArrays[i] = byteCharacters.charCodeAt(i);\n    }\n    const blob = new Blob([byteArrays], { type: \"image/jpeg\" });\n\n    setFile1(blob);\n    setWebcamOn(false);\n  };\n\n  const handleStartWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n\n      if (stream && stream.getVideoTracks().length > 0) {\n        setWebcamOn(true);\n      } else {\n        alert(\"No webcam present.\");\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Requested Device Not Found\");\n    }\n  };\n\n  const handleStopWebcam = () => {\n    setWebcamOn(false);\n  };\n\n  const submitHandler = async () => {\n    const formData = new FormData();\n    formData.append(\"file1\", file1);\n  \n    try {\n      const { data } = await axios.post(\"/api/user/face-login\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        timeout: 200000,\n      });\n  \n      setTimeout(() => {\n        toast({\n          title: \"Face Login Successful\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }, 1000);\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      window.location.reload();\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: error.response ? error.response.data.message : \"An error occurred.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n  \n\n  useEffect(() => {\n    if (file1) {\n      const imageUrl = URL.createObjectURL(file1);\n      setPreviewUrl(imageUrl);\n    }\n  }, [file1]);\n\n  const loading = false;\n\n  return (\n    <VStack spacing=\"10px\">\n      {webcamOn ? (\n        <>\n          <Webcam audio={false} mirrored={true} ref={webcamRef} screenshotFormat=\"image/jpeg\" />\n          <Button colorScheme=\"blue\" onClick={handleCapture} mt=\"4\">\n            Capture Image\n          </Button>\n          <Button colorScheme=\"blue\" onClick={handleStopWebcam} mt=\"4\">\n            Stop Webcam\n          </Button>\n        </>\n      ) : (\n        <Button colorScheme=\"blue\" onClick={handleStartWebcam} mt=\"4\">\n          Start Webcam\n        </Button>\n      )}\n\n      {file1 && (\n        <div style={{ maxWidth: \"100px\" }}>\n          <img src={previewUrl} alt=\"Preview\" style={{ borderRadius: \"5%\" }} />\n        </div>\n      )}\n\n      <FormControl id=\"image-upload\" isRequired>\n        <FormLabel>Image</FormLabel>\n        <Input\n          type=\"file\"\n          placeholder=\"Upload Image\"\n          onChange={(e) => setFile1(e.target.files[0])}\n        />\n      </FormControl>\n\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Face Login\n      </Button>\n    </VStack>\n  );\n};\n\nexport default FaceLogin;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\nimport FaceLogin from \"../components/Authentication/FaceLogin\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n         Chat-App\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Face Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <FaceLogin />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport VideoChatModal from \"./miscellaneous/VideoChatModal\";\nconst ENDPOINT = process.env.REACT_ENDPOINT;\nconsole.log(\"ENDPOINT\", ENDPOINT);\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const [ServerSocket, setServerSocket] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      setLoading(true);\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    socket.on('newUserResponse', (socketId) => {\n      setServerSocket(socketId)\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                  <VideoChatModal user={user} socket={socket} selectedChat={selectedChat} />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                  <VideoChatModal user={user} socket={socket} selectedChat={selectedChat} />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n                <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                  <Avatar\n                    mt=\"7px\"\n                    mr={1}\n                    size=\"sm\"\n                    cursor=\"pointer\"\n                    name={m.sender.name}\n                    src={m.sender.pic}\n                  />\n                </Tooltip>\n              )}\n            <span\n              style={{\n                backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                  }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              <div className=\"senderName\"> {m.sender.name}</div>\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n// import { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction,user }) => {\n  // const { user } = ChatState();\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { PhoneIcon } from \"@chakra-ui/icons\";\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Button,\n    useDisclosure,\n    IconButton,\n    Text,\n    Image,\n    Divider,\n} from \"@chakra-ui/react\";\nimport Peer from 'simple-peer';\n\n\nconst VideoChatModal = ({ user, socket, selectedChat, children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [receivingCall, setReceivingCall] = useState(false);\n    const [showVideoOverlay, setShowVideoOverlay] = useState(false);\n    const myVideo = useRef(null);\n    const userVideo = useRef(null);\n    const connectionRef = useRef(null);\n    const { isOpen } = useDisclosure();\n    const [idToCall, setIdToCall] = useState([]);\n    const [me, setMe] = useState('');\n    const [stream, setStream] = useState(null);\n    const [caller, setCaller] = useState('');\n    const [callerSignal, setCallerSignal] = useState(null);\n    const [name, setName] = useState('');\n    // console.log(\"user\", user);\n    console.log(\"selectedChat################\", selectedChat);\n\n    useEffect(() => {\n        let findItemId = selectedChat && selectedChat.users.find((s) => s._id == user._id)\n        console.log(\"findItemId\", findItemId);\n        if (findItemId) {\n            let headId = selectedChat && selectedChat.users.findIndex((s) => s._id == user._id)\n            console.log(\"headId\", headId);\n            let data = selectedChat && selectedChat.users.splice(headId, 1)\n            console.log(\"datra of array\", selectedChat);\n        }\n        setMe(user._id);\n        let result = selectedChat && selectedChat.users && selectedChat.users.map(option => option._id);\n        console.log(\"resultaaaaaa\", result);\n        // let array = []\n        // array.push( selectedChat.users)\n        if (result) {\n            setIdToCall(result);\n        }\n    }, [socket]);\n\n\n\n    // console.log(\"--------<><><><><\", selectedChat);\n\n    useEffect(() => {\n        socket.on('callUser', (data) => {\n            console.log(\"qqqqqqqqq\", data);\n            setReceivingCall(true);\n            setCaller(data.from);\n            // setName(data.name);\n            setCallerSignal(data.signal);\n            setShowVideoOverlay(true);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (showVideoOverlay) {\n            navigator.mediaDevices\n                .getUserMedia({ video: true, audio: true })\n                .then((stream) => {\n                    setStream(stream);\n                    myVideo.current.srcObject = stream;\n                });\n        }\n    }, [showVideoOverlay])\n\n    const leaveCall = () => {\n        setCallEnded(true);\n        connectionRef.current.destroy();\n        setShowVideoOverlay(false);\n    };\n\n    const answerCall = () => {\n        setCallAccepted(true);\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream: stream,\n        });\n        peer.on('signal', (data) => {\n            console.log(\"data of answer call\", data);\n            socket.emit('answerCall', { signal: data, to: caller });\n        });\n        peer.on('stream', (stream) => {\n            userVideo.current.srcObject = stream;\n        });\n\n        peer.signal(callerSignal);\n        connectionRef.current = peer;\n    };\n\n    const callUser = (id) => {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream: stream,\n        });\n        peer.on('signal', (data) => {\n            socket.emit('callUser', {\n                userToCall: id,\n                signalData: data,\n                from: me,\n                name: user.name,\n            });\n        });\n        peer.on('stream', (stream) => {\n            userVideo.current.srcObject = stream;\n        });\n        socket.on('callAccepted', (signal) => {\n            setCallAccepted(true);\n            peer.signal(signal);\n        });\n        connectionRef.current = peer;\n    };\n\n    return (\n        <>\n            {callAccepted && !callEnded ?\n                null : (\n                    <IconButton d={{ base: \"flex\" }} icon={<PhoneIcon />} onClick={(() => { setShowVideoOverlay(true) })} />\n                )}\n\n            <Modal size=\"xl\" onClose={leaveCall} isOpen={showVideoOverlay} isCentered>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader\n                        fontSize=\"40px\"\n                        fontFamily=\"Work sans\"\n                        d=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Video Chat\n                    </ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody\n                        d=\"flex\"\n                        flexDir=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <div className=\"row\">\n                            {(\n                                <div className=\"video-overlay-stream col-6\">\n                                    <video playsInline ref={myVideo} autoPlay style={{ width: '200px', height: '200px' }} />\n                                </div>\n                            )}\n                            {callAccepted && !callEnded && (\n                                <div className=\"video-overlay-stream col-6\">\n                                    <video playsInline ref={userVideo} autoPlay style={{ width: '200px', height: '200px' }} />\n                                </div>\n                            )}\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n\n                        {receivingCall && !callAccepted && (\n                            <div className=\"incoming-call-notification\">\n                                <p>Incoming video call</p>\n                                <button onClick={answerCall} className=\"btn btn-primary\">\n                                    Answer\n                                </button>\n                            </div>\n                        )}\n                        {callAccepted && !callEnded ? (\n                            <Button variant=\"danger\" onClick={leaveCall}>\n                                Stop Video Call\n                            </Button>\n                        ) : (\n                            <Button variant=\"primary\" onClick={() => callUser(idToCall)}>\n                                Start Video Call\n                            </Button>\n                        )}\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n\n    );\n};\n\nexport default VideoChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      if (data) {\n        setGroupChatName();\n        setSelectedUsers([])\n      }\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Button,\n    useDisclosure,\n    IconButton,\n    Text,\n    Image,\n    Divider,\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Textarea,\n    Select\n} from \"@chakra-ui/react\";\n\n\nconst Translate = () => {\n    const [showVideoOverlay, setShowVideoOverlay] = useState(false);\n    const { isOpen } = useDisclosure();\n    const leaveCall = () => {\n        setShowVideoOverlay(false);\n    };\n    const [inputText, setInputText] = useState('');\n    const [detectLanguageKey, setdetectedLanguageKey] = useState('');\n    const [selectedLanguageKey, setLanguageKey] = useState('')\n    const [languagesList, setLanguagesList] = useState([])\n    const [resultText, setResultText] = useState('');\n    const getLanguageSource = () => {\n        axios.post(`https://libretranslate.de/detect`, {\n            q: inputText\n        })\n            .then((response) => {\n                if (response && response.data[0] && response.data[0].language !== \"\") {\n                    console.log(\"response.data[0].language\", response.data[0].language);\n                    setdetectedLanguageKey(response.data[0].language)\n                }\n\n            })\n    }\n    useEffect(() => {\n        axios.get(`https://libretranslate.de/languages`)\n            .then((response) => {\n                setLanguagesList(response.data)\n            })\n    }, [])\n\n    const languageKey = (selectedLanguage) => {\n        setLanguageKey(selectedLanguage.target.value)\n    }\n\n    const translateText = () => {\n        getLanguageSource();\n\n        let data = {\n            q: inputText,\n            source: detectLanguageKey,\n            target: selectedLanguageKey\n        }\n        console.log(\"dataaaa\", data);\n        axios.post(`https://libretranslate.de/translate`, data)\n            .then((response) => {\n                console.log(\"response\", response);\n                setResultText(response.data.translatedText)\n            })\n    }\n\n    return (\n        <>\n            <Button onClick={(() => { setShowVideoOverlay(true) })} >\n                <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n                    Text-Translate\n                </Text>\n            </Button>\n\n            <Modal size=\"xl\" onClose={leaveCall} isOpen={showVideoOverlay} isCentered>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader\n                        fontSize=\"40px\"\n                        fontFamily=\"Work sans\"\n                        d=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Text Translator\n                    </ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody\n                        d=\"flex\"\n                        flexDir=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n\n                        <FormControl id=\"typed text\" isRequired mt={3}>\n                            <Textarea\n                                placeholder='Type Text to Translate..'\n                                onChange={(e) => setInputText(e.target.value)}\n                                size='sm'\n                            />\n                        </FormControl>\n\n                        <FormControl mt={3}>\n                            <Select placeholder='lease Select Language..' onChange={languageKey}>\n                                {languagesList.map((language) => {\n                                    return (\n                                        <option value={language.code}>\n                                            {language.name}\n                                        </option>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n\n                        <FormControl id=\"typed text\" isRequired mt={3}>\n                            <Textarea\n                                placeholder='Your Result Translation..'\n                                value={resultText}\n                            />\n                        </FormControl>\n\n                        <Button\n                            colorScheme=\"orange\"\n                            size=\"large\"\n                            style={{ marginTop: 15 }}\n                            onClick={translateText}\n                            p={3}\n\n                        >\n                            Translate\n                        </Button>\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button variant=\"danger\" onClick={leaveCall} >\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n\n    );\n};\n\nexport default Translate;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport Translate from \"./Translate\"\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n\n        <Translate />\n\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Chat-App\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n  console.log('in chat page');\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import React from 'react'\nimport { VStack } from \"@chakra-ui/layout\";\nimport {\n    Box,\n    Container,\n} from \"@chakra-ui/react\";\n\nconst NotFound = () => {\n    return (\n        <Container maxW=\"xl\" centerContent>\n            <Box\n                d=\"flex\"\n                justifyContent=\"center\"\n                p={3}\n                bg=\"white\"\n                w=\"100%\"\n                height=\"300px\"\n                m=\"40px 0 15px 0\"\n                borderRadius=\"lg\"\n                borderWidth=\"1px\"\n            >\n                <h1 style={{ fontSize: \"20px\" }}>Page Not Found..!</h1>\n            </Box>\n        </Container >\n    )\n}\n\nexport default NotFound\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport NotFound from \"./Pages/NotFound\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/chats\" component={Chatpage} exact />\n        <Route path=\"/\" component={Homepage} exact />\n        <Route path=\"/*\" component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./assets/css/style.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}